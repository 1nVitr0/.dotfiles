#!/bin/bash

# Usage: update_check original update
update_check() {
  if test -f "$1" && ! diff "$1" "$2" &> /dev/null ; then
    echo "Upstream and local files differ for $1. Opening diff editor to merge."
    echo "    Waiting for editor to close file..."
    code -wd "$1" "$2"
    read -rp "    Do you want to keep merged version (y/N)? " -n 1
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]] ; then
      echo "    Keeping local version."
      return 1
    fi
  fi

  return 0
}

# Usage: update_check encryped_file
update_check_encrypted() {
  orig="$(dirname "$1")/$(basename "$1" .gpg)"
  temp="$(dirname "$1")/~$(basename "$1" .gpg)"

  if ! gpg --output "$temp" --decrypt "$1" ; then
    return 1
  fi
  update_check "$orig" "$temp"; result=$?
  rm -f "$temp" 

  return $result
}

make_submodule() {
  cd "$1"
  git init
  git remote add origin "$2"

  # Add files, including ignored that should be bootstrapped
  git add .
  [ test -f .setup/ ] && git add .setup/

  git commit -am 'create dotfile profile $1'
  if git push --force -u origin main ; then
    # Only remove folder if push was successful
    cd .. && rm -rf "$1"
    git submodule add "$2" "$1"
  else
    exit 1
  fi
}
